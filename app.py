# app.py
import os
import asyncio
from aiohttp import web
import logging
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(__file__))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –±–æ—Ç–∞
bot_application = None

async def init_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
    global bot_application
    try:
        from telegram.ext import Application
        import config
        
        logger.info("üöÄ INITIALIZING TELEGRAM BOT...")
        bot_application = Application.builder().token(config.BOT_TOKEN).build()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        from bot import setup_handlers
        setup_handlers(bot_application)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL
        if config.WEBHOOK_URL:
            webhook_url = f"{config.WEBHOOK_URL}/8297051179:AAGHxFTyY2ourq2qmORND-oBN5TaKVYM0uE"
            logger.info(f"üîó SETTING WEBHOOK TO: {webhook_url}")
            await bot_application.bot.set_webhook(webhook_url, drop_pending_updates=True)
            logger.info("‚úÖ WEBHOOK SET SUCCESSFULLY!")
        else:
            logger.warning("‚ö†Ô∏è WEBHOOK_URL NOT SET")
            
        logger.info("‚úÖ BOT INITIALIZED SUCCESSFULLY!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå FAILED TO INITIALIZE BOT: {e}")
        import traceback
        logger.error(traceback.format_exc())
        return False

async def handle_webhook(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram"""
    global bot_application
    
    if bot_application is None:
        logger.error("‚ùå BOT NOT INITIALIZED!")
        return web.Response(text="Bot not ready", status=503)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        data = await request.json()
        from telegram import Update
        update = Update.de_json(data, bot_application.bot)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        await bot_application.process_update(update)
        logger.info("üì® WEBHOOK PROCESSED SUCCESSFULLY")
        return web.Response(text="OK", status=200)
        
    except Exception as e:
        logger.error(f"‚ùå ERROR PROCESSING WEBHOOK: {e}")
        return web.Response(text="Error", status=500)

async def health_check(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    status = "RUNNING" if bot_application else "INITIALIZING"
    return web.Response(text=f"Bot is {status}!")

async def init_app():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üåê INITIALIZING WEB APPLICATION...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    success = await init_bot()
    
    app = web.Application()
    
    # –ú–∞—Ä—à—Ä—É—Ç—ã
    app.router.add_post('/8297051179:AAGHxFTyY2ourq2qmORND-oBN5TaKVYM0uE', handle_webhook)
    app.router.add_get('/health', health_check)
    app.router.add_get('/', health_check)
    
    if success:
        logger.info("‚úÖ WEB APPLICATION READY")
    else:
        logger.error("‚ùå WEB APPLICATION INITIALIZATION FAILED")
    
    return app

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    
    async def start_server():
        app = await init_app()
        runner = web.AppRunner(app)
        await runner.setup()
        site = web.TCPSite(runner, '0.0.0.0', port)
        await site.start()
        logger.info(f"üöÄ SERVER STARTED ON PORT {port}")
        logger.info("üéØ BOT IS READY TO RECEIVE WEBHOOKS!")
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        while True:
            await asyncio.sleep(3600)
    
    asyncio.run(start_server())