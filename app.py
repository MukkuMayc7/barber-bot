# app.py - COMPATIBLE WITH PTB 13.15
import os
import asyncio
from aiohttp import web
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8297051179:AAGHxFTyY2ourq2qmORND-oBN5TaKVYM0uE"
WEBHOOK_URL = "https://barber-bot-render.onrender.com"
WEBHOOK_PATH = f"/{BOT_TOKEN}"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
bot_initialized = False
application = None

async def initialize_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
    global bot_initialized, application
    
    try:
        logger.info("üöÄ STARTING BOT INITIALIZATION...")
        
        # –ò–º–ø–æ—Ä—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from telegram.ext import Updater
        import database
        from bot import setup_handlers
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        logger.info("üì¶ Initializing database...")
        db = database.Database()
        logger.info("‚úÖ Database initialized")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ (–¥–ª—è –≤–µ—Ä—Å–∏–∏ 13.15 –∏—Å–ø–æ–ª—å–∑—É–µ–º Updater)
        logger.info("ü§ñ Creating bot application...")
        application = Updater(token=BOT_TOKEN, use_context=True)
        logger.info("‚úÖ Bot application created")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        logger.info("‚öôÔ∏è Setting up handlers...")
        setup_handlers(application)
        logger.info("‚úÖ Bot handlers setup completed")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
        logger.info("üåê Setting webhook...")
        application.bot.set_webhook(
            url=f"{WEBHOOK_URL}{WEBHOOK_PATH}",
            drop_pending_updates=True
        )
        logger.info(f"‚úÖ Webhook set: {WEBHOOK_URL}{WEBHOOK_PATH}")
        
        bot_initialized = True
        logger.info("üéâ Bot fully initialized and ready!")
        
    except Exception as e:
        logger.error(f"üí• Bot initialization failed: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")

async def handle_webhook(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞"""
    global bot_initialized, application
    
    if not bot_initialized:
        logger.warning("‚è≥ Bot not initialized yet")
        return web.Response(text="Bot initializing", status=503)
    
    try:
        data = await request.json()
        from telegram import Update
        update = Update.de_json(data, application.bot)
        
        # –î–ª—è –≤–µ—Ä—Å–∏–∏ 13.15 –∏—Å–ø–æ–ª—å–∑—É–µ–º process_update —á–µ—Ä–µ–∑ dispatcher
        application.dispatcher.process_update(update)
        
        logger.info("‚úÖ Webhook processed successfully")
        return web.Response(text="OK")
    except Exception as e:
        logger.error(f"Webhook error: {e}")
        return web.Response(text="Error", status=500)

async def health_check(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    global bot_initialized
    status = "RUNNING" if bot_initialized else "INITIALIZING"
    return web.Response(text=f"Bot status: {status}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp
    app = web.Application()
    app.router.add_post(WEBHOOK_PATH, handle_webhook)
    app.router.add_get('/health', health_check)
    app.router.add_get('/', health_check)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    asyncio.create_task(initialize_bot())
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    runner = web.AppRunner(app)
    await runner.setup()
    
    port = int(os.environ.get('PORT', 10000))
    site = web.TCPSite(runner, '0.0.0.0', port)
    await site.start()
    
    logger.info(f"üöÄ Server started on port {port}")
    logger.info("üì± Bot is starting up...")
    
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    await asyncio.Future()

if __name__ == '__main__':
    asyncio.run(main())